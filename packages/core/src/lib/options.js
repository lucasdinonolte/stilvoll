import path from 'node:path';
import { createRequire } from 'node:module';
import { z } from 'zod';

import defaultPreset from '@stilvoll/preset-default';

const require = createRequire(import.meta.url);

const configSchema = z
  .object({
    input: z.array(z.string()),
    output: z.string(),
    entries: z.array(z.string()),
    typeDefinitions: z.string().or(z.literal(false)),
    useImportant: z.boolean(),
    banner: z.string().nullable(),
    breakpoints: z.record(z.number()),
    additionalTokens: z.record(z.union([z.string(), z.number()])),
  })
  .passthrough();

export const defaultOptions = {
  input: [],
  entries: [],
  output: null,
  typeDefinitions: path.join(require.resolve('stilvoll'), '../index.d.ts'),
  useImportant: false,
  banner: '/* AUTOGENERATED BY STILVOLL, DO NOT EDIT DIRECTLY */',
  breakpoints: {},
  ...defaultPreset(),
};

const mergeWithDefaultConfig = (config = {}) =>
  Object.assign({}, defaultOptions, config);

export const validateConfig = (config) =>
  configSchema.parse(mergeWithDefaultConfig(config));
